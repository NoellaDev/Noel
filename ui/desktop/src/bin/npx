#!/bin/bash

# Enable strict mode to exit on errors and unset variables
set -euo pipefail

# Set log file
LOG_FILE="/tmp/mcp.log"

# Clear the log file at the start
> "$LOG_FILE"

# Function for logging
log() {
    local MESSAGE="$1"
    echo "$(date +'%Y-%m-%d %H:%M:%S') - $MESSAGE" | tee -a "$LOG_FILE"
}

# Trap errors and log them before exiting
trap 'log "An error occurred. Exiting with status $?."' ERR

log "Starting npx setup script."

# Ensure ~/.goose/mcp-hermit/bin exists
log "Creating directory ~/.goose/mcp-hermit/bin if it does not exist."
mkdir -p ~/.goose/mcp-hermit/bin

# Change to the ~/.goose/mcp-hermit directory
log "Changing to directory ~/.goose/mcp-hermit."
cd ~/.goose/mcp-hermit

# Check if hermit binary exists and download if not
if [ ! -f ~/.goose/mcp-hermit/bin/hermit ]; then
    log "Hermit binary not found. Downloading hermit binary."
    curl -fsSL "https://github.com/cashapp/hermit/releases/download/stable/hermit-$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m | sed 's/x86_64/amd64/' | sed 's/aarch64/arm64/').gz" \
        | gzip -dc > ~/.goose/mcp-hermit/bin/hermit && chmod +x ~/.goose/mcp-hermit/bin/hermit
    log "Hermit binary downloaded and made executable."
else
    log "Hermit binary already exists. Skipping download."
fi

# Update PATH
export PATH=~/.goose/mcp-hermit/bin:$PATH
log "Updated PATH to include ~/.goose/mcp-hermit/bin."


# Verify hermit installation
log "Checking for hermit in PATH."
which hermit >> "$LOG_FILE"

# Initialize hermit
log "Initializing hermit."
hermit init >> "$LOG_FILE"

# Install Node.js using hermit
log "Installing Node.js with hermit."
hermit install node >> "$LOG_FILE"

# Verify installations
log "Verifying installation locations:"
log "hermit: $(which hermit)"
log "node: $(which node)"
log "npx: $(which npx)"

# Set default registry to npm
export NPM_CONFIG_REGISTRY="https://registry.npmjs.org/"

# Final step: Execute npx with passed arguments
log "Executing 'npx' command with arguments: $*"
npx "$@" || log "Failed to execute 'npx' with arguments: $*"

log "npx setup script completed successfully."